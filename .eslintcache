[{"G:\\pinch\\01-starting-setup\\src\\index.js":"1","G:\\pinch\\01-starting-setup\\src\\App.js":"2"},{"size":148,"mtime":1633159405677,"results":"3","hashOfConfig":"4"},{"size":624,"mtime":1633159407920,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vvk8c2",{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"G:\\pinch\\01-starting-setup\\src\\index.js",[],"G:\\pinch\\01-starting-setup\\src\\App.js",["11"],"import React, { useCallback, useRef } from \"react\";\r\nimport QuickPinchZoom, { make3dTransformValue } from \"react-quick-pinch-zoom\";\r\nimport image1 from \"./base_bw.png\"; // with import\r\n\r\nfunction App() {\r\n  const imgRef = useRef();\r\n  const onUpdate = useCallback(({ x, y, scale }) => {\r\n    const { current: img } = imgRef;\r\n\r\n    if (img) {\r\n      const value = make3dTransformValue({ x, y, scale });\r\n\r\n      img.style.setProperty(\"transform\", value);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <QuickPinchZoom onUpdate={onUpdate}>\r\n      <img ref={imgRef} src={image1} />\r\n    </QuickPinchZoom>\r\n  );\r\n}\r\nexport default App;\r\n",{"ruleId":"12","severity":1,"message":"13","line":19,"column":7,"nodeType":"14","endLine":19,"endColumn":40},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]